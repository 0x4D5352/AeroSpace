#!/usr/bin/env bash
set -e # Exit if one of commands exit with non-zero exit code
set -u # Treat unset variables and parameters other than the special parameters ‘@’ or ‘*’ as an error
set -o pipefail # Any command failed in the pipe fails the whole pipe
# set -x # Print shell commands as they are executed (or you can try -v which is less verbose)

cd "$(dirname "$0")"

version=$(head -1 ./version.txt | awk '{print $1}')
build_number=$(tail -1 ./version.txt | awk '{print $1}')

cat > LocalPackage/Sources/Common/versionGenerated.swift <<EOF
// FILE IS GENERATED BY generate.sh
public let aeroSpaceAppVersion = "$version"
EOF

# GNU sed
gsed -i "s/CURRENT_PROJECT_VERSION.*/CURRENT_PROJECT_VERSION: $build_number # GENERATED BY generate.sh/" ./project.yml
gsed -i "s/MARKETING_VERSION.*/MARKETING_VERSION: $version # GENERATED BY generate.sh/" ./project.yml

./script/generate-command-descriptions.sh

xcodegen # https://github.com/yonaskolb/XcodeGen
