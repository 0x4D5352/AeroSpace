#!/usr/bin/env bash
set -e # Exit if one of commands exit with non-zero exit code
set -u # Treat unset variables and parameters other than the special parameters ‘@’ or ‘*’ as an error
set -o pipefail # Any command failed in the pipe fails the whole pipe
# set -x # Print shell commands as they are executed (or you can try -v which is less verbose)

cd "$(dirname "$0")/.."

entries() {
    for file in $(ls docs/aerospace-*.adoc); do
        if grep -q 'exec' <<< $file; then
            continue
        fi
        subcommand=$(basename $file | sed 's/^aerospace-//' | sed 's/\.adoc$//')
        desc="$(grep :manpurpose: $file | sed -E 's/:manpurpose: (.*)/\1/')"
        echo "    [\"  $subcommand\", \"$desc\"],"
    done
}

cat <<EOF > ./LocalPackage/Sources/Cli/subcommandDescriptionsGenerated.swift
// FILE IS GENERATED BY script/generate-command-descriptions.sh
let subcommandDescriptions = [
$(entries)
]
EOF
